# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  install-pip-deps:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Checkout python-greetings repository
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
      - name: Install dependencies
        working-directory: 'python-greetings'
        run: |
          pip install -r requirements.txt
    
  deploy-to-dev:
    runs-on: self-hosted
    needs: [install-pip-deps]
    steps:
      - uses: actions/checkout@v4
      - name: Checkout python-greetings repository
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
      - name: Deploy to dev
        working-directory: 'python-greetings'
        run: |
          pm2 delete greetings-app-dev || true
          NODE_PORT=7001 pm2 start app.py --name greetings-app-dev

  tests-on-dev:
    runs-on: self-hosted
    needs: [deploy-to-dev]
    steps:
      - uses: actions/checkout@v4
      - name: Checkout course-js-api-framework repository
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/course-js-api-framework'
          path: 'course-js-api-framework'
      - name: Wait for 10 seconds
        run: |
          sleep 10
      - name: Run tests on dev
        working-directory: 'course-js-api-framework'
        run: |
          npm install
          npm run greetings greetings_dev

  deploy-to-staging:
    runs-on: self-hosted
    needs: [tests-on-dev]
    steps:
      - uses: actions/checkout@v4
      - name: Checkout python-greetings repository
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
      - name: Deploy to staging
        working-directory: 'python-greetings'
        run: |
          pm2 delete greetings-app-staging || true
          NODE_PORT=7002 pm2 start app.py --name greetings-app-staging
        
  tests-on-staging:
    runs-on: self-hosted
    needs: [deploy-to-staging]
    steps:
      - uses: actions/checkout@v4
      - name: Checkout course-js-api-framework repository
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/course-js-api-framework'
          path: 'course-js-api-framework'
      - name: Run tests on staging
        working-directory: 'course-js-api-framework'
        run: |
          npm install
          npm run greetings greetings_staging

  deploy-to-preprod:
    runs-on: self-hosted
    needs: [tests-on-staging]
    steps:
      - uses: actions/checkout@v4
      - name: Checkout python-greetings repository
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
      - name: Deploy to preprod
        working-directory: 'python-greetings'
        run: |
          pm2 delete greetings-app-preprod || true
          NODE_PORT=7003 pm2 start app.py --name greetings-app-preprod
          
  tests-on-preprod:
    runs-on: self-hosted
    needs: [deploy-to-preprod]
    steps:
      - uses: actions/checkout@v4
      - name: Checkout course-js-api-framework repository
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/course-js-api-framework'
          path: 'course-js-api-framework'
      - name: Run tests on preprod
        working-directory: 'course-js-api-framework'
        run: |
          npm install
          npm run greetings greetings_preprod
          
  deploy-to-prod:
    runs-on: self-hosted
    needs: [tests-on-preprod]
    steps:
      - uses: actions/checkout@v4
      - name: Checkout python-greetings repository
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
      - name: Deploy to prod
        working-directory: 'python-greetings'
        run: |
          pm2 delete greetings-app-prod || true
          NODE_PORT=7004 pm2 start app.py --name greetings-app-prod

  tests-on-prod:
    runs-on: self-hosted
    needs: [deploy-to-prod]
    steps:
      - uses: actions/checkout@v4
      - name: Checkout course-js-api-framework repository
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/course-js-api-framework'
          path: 'course-js-api-framework'
      - name: Run tests on prod
        working-directory: 'course-js-api-framework'
        run: |
          npm install
          npm run greetings greetings_prod
